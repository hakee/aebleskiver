!!! 5
html(lang='en')
  head
    title &AElig;bleskiver
    
    //- CSS
    link(rel='stylesheet', href='/css/style.css')
  body
    #application
    
    //- Main application
    script#application-template(type='text/template')
    
      .wrapper
        #header
          nav#navigation
            a#home.icon(href='/#/', title='Home', accesskey='H')&nbsp;
            a#create-room(accesskey='C') Create Room
            a#login(accesskey='L') Login
            a#signup(accesskey='J') Join
            a#settings.icon(title='Settings', accesskey='E')&nbsp;
            a#logout(accesskey='O') Logout
        
        #sidebar-wrapper
          a.heart(href='/')
            .heart-left
            .heart-right
            .heart-content
            
          #sidebar
            #sidebar-controls
          
            #sidebar-up
              button#show-rooms(accesskey='R') Rooms
              button#show-users(accesskey='U') Users
            
            #sidebar-content
              #users
              #rooms
            
            #search-form
              button#search-now Go
              .input-wrap
                input#search(type='text', name='search', placeholder='Search', accesskey='S')
              
            #sidebar-down
              //.statistics#app-stats
        
        #main
          #main-tabs
            button#news News
            button#help Help
            
          #main-controls
            .main-controls
              button.new-room Create Channel
            
            .layout-controls
              button.list List
          
          #main-content
          #welcome-text
            #fork-me
              a.ribbon(href='https://github.com/sorensen/aebleskiver')
                span Fork me on GitHub
            
            h1.title Welcome to &AElig;bleskiver!
            p
              | This is a real-time chat application, built with
              | the Express.js and Backbone.js frameworks.
              
            p
              | You can load up a chat room by clicking on one of
              | the links in the sidebar menu.  There is also a 
              | persistant members list there as well, where you 
            
            p
              | Chat rooms and user profiles can either be added 
              | as a 'favorite' or a 'friend', which are then 
              | added to the lists on the bottom bar.
            
            p
              | You may create your own chat room, which can be 
              | then linked to for you and your friends. If too 
              | many rooms appear, you can use the search bar below
              | the list to filter them.  Room 'titles' and 
              | 'descriptions' are both indexed.
          
      .dialog-wrapper#create-room-dialog
      .dialog-wrapper#login-dialog
      .dialog-wrapper#signup-dialog
      .dialog-wrapper#settings-dialog
      #footer
        #start-menu
          #start-menu-icon.icon(title='Menu', accesskey='M')
          //.button.title.submit Menu
          //  .heart(href='/')
          //    .heart-left
          //    .heart-right
          //    .heart-content
        
        #friend-list
          #friends-icon.icon(title='Friends', accesskey='F')
          //.button.title Friends
          .friend-wrapper
            .heading Your Friends
            .controls
              .open
              .close
            .friends
            
        #favorite-list
          #favorites-icon.icon(title='Favorites', accesskey='A')
          //.button.title Favorites
          .favorite-wrapper
            .heading Your Favorites
            .controls
              .open
              .close
            .favorites
        
        #statistics
          #stats-icon.icon(title='Statistics', accesskey='T')
          .stats-wrapper
            .heading Statistics
            .controls
              .open
              .close
            .stats
              #app-stats.statistics
        
        #github
          a(href='https://github.com/sorensen/aebleskiver', title='Fork me on GitHub!', accesskey='G')
            #github-icon.icon
          
        #conversations
        
        #copyright
          p &copy;
        #authors
          p.author Beau Sorensen
      #overlay

    //- Application statistics
    script#application-stats-template(type='text/template')
      .stat.total-online
        span.title Online
        span.value {{ totalOnline }}
      .stat.total-users
        span.title Members
        span.value {{ totalUsers }}
      .stat.total-rooms
        span.title Rooms
        span.value {{ totalRooms }}
      .stat.version
        span.title Version
        span.value {{ version }}
    
    //- Friend chat box
    script#friend-chat-template(type='text/template')
      .title To: {{ username }}
      .destroy
      .messages
      .message-form
        button.submit Send
        .input-wrap
          input.create-message(type='text', name='message', placeholder='Say something...', length='255')
        
    //- User profile
    script#user-template(type='text/template')
      h1.name
        span.headline
          {{ username }}
          span.displayname ({{ displayName }})
        .controls
          span.icon#add-friend(title='Add to Friends', accesskey='W') +
          span.icon#remove-friend(title='Remove from Friends', accesskey='U') -
          span.icon#send-message(title='Send a Message', accesskey='M') Send a Message
          span.icon#leave-profile(title='Leave Profile', accesskey='X')
          
      .statistics.user-stats
      .picture: img(src='{{ avatar }}')
      .details
        .created
          span.title Joined 
          abbr.value(title='{{ created }}') {{ created }}
        .last-online
          span.title Last Online
          abbr.value(title='{{ modified }}') {{ modified }}
        .status
          span.title Status
          span.value {{ status }}
        .email
          span.title Email
          span.value {{ email }}
        .bio
          span.title Bio
          span.value {{ bio }}
      
       .wall
         .posts
         .post-form
           .icon#post-submit(title='Submit Post')
           .input-wrap
              input.create-post(type='text', name='post', placeholder='Write on {{ username }}&rsquo;s wall', length='255', accesskey='I')
        
    //- User listing
    script#user-list-template(type='text/template')
      a(href='/#/users/{{ username }}')
        h3.name
          span.avatar: img(src='{{ avatar }}')
          span.username {{ displayName }}
      .statistics.user-stats
      
    //- Friend listing
    script#friend-list-template(type='text/template')
      h3.name
        span.avatar: img(src='{{ avatar }}')
        span.username {{ displayName }}
      .statistics.user-stats
    
    //- User statistics
    script#user-stats-template(type='text/template')
      .stat.total-messages
        span.title Posts
        span.value {{ totalPosts }}
      
    //- Conversation
    script#conversation-template(type='text/template')
      button.heading {{ name }}
      span.destroy
      .controls
        button.add-favorite.submit(title='Add to Favorites') +
        button.remove-favorite(title='Remove from Favorites') -
        .admin-controls
          button.delete-conversation.delete Delete Room
          button.ban-user Ban User
          button.invite-user Invite User
      
      .users
      .messages
      .message-form
        button.submit Send
        .input-wrap
          input.create-message(type='text', name='message', placeholder='Say something...', length='255')
      
    //- Room
    script#room-template(type='text/template')
      h1.name
        span.headline {{ name }}
        .controls
          .icon#add-favorite(title='Add to Favorites', accesskey='W')&nbsp;
          .icon#remove-favorite(title='Remove from Favorites', accesskey='Q')&nbsp;
          .icon#leave-room(title='Leave Room', accesskey='X')&nbsp;
          .admin-controls
            button.delete-room.delete Delete Room
            button.ban-user Ban User
            button.invite-user Invite User
          
        p.description {{ description }}
      .statistics.room-stats
      
      .users
      .messages
      .message-form
        .icon#message-submit(title='Send Message')
        .input-wrap
          input.create-message(type='text', name='message', placeholder='Say something...', length='255', accesskey='I')

    //- Room listing
    script#room-list-template(type='text/template')
      a(href='/#/rooms/{{ slug }}')
        h3.name(title='{{ description }}')
          span {{ name }}
          span.destroy
        p.description {{ description }}
      .statistics.room-stats
      .ranking
      
    //- Room rankings
    script#room-rank-template(type='text/template')
      .rank {{ rank }}
      .upvote: span.arrow-wrap: span.arrow &and;
      .downvote: span.arrow-wrap: span.arrow &or;
      
    //- Room statistics
    script#room-stats-template(type='text/template')
      .stat.total-messages
        span.title Messages
        span.value {{ totalMessages }}
        
    //- Single message
    script#message-list-template(type='text/template')
    script#message-template(type='text/template')
      span.small-avatar: img(src='{{ avatar }}')
      a.username(href='#/users/{{ username }}') {{ displayName }}
      span.data {{ text }}
      abbr.created.timeago(title='{{ created }}') {{ created }}
    
    //- Notification template
    script#notification-template(type='text/template')
      .notification.{{ type }}
        .destroy
        .type {{ type }}
        .message {{ message }}
    
    //- Settings template
    script#settings-template(type='text/template')
      #settings-form.dialog
        .title
          h3 Settings
        .content
          p
            label(for='settings-username') ID: 
            .input-wrap
              input#settings-id(type='text', name='id', disabled='disabled', value='{{ id }}')
          p
            label(for='settings-username') Username: 
            .input-wrap
              input#settings-username(type='text', name='username', disabled='disabled', value='{{ username }}')
          p
            label(for='settings-displayname') Display Name: (optional)
            .input-wrap
              input#settings-displayname(type='text', name='displayname', value='{{ displayName }}')
          p
            label(for='settings-email') Email: 
            .input-wrap
              input#settings-email(type='text', name='email', value='{{ email }}')
          p
            label(for='settings-bio') Bio: 
            textarea#settings-bio(name='bio', rows='3') {{ bio }}
          p
            label(for='settings-password') Password: 
            .input-wrap
              input#settings-password(type='password', name='password')
          p
            label(for='settings-password-confirm') Confirm Password: 
            .input-wrap
              input#settings-password-confirm(type='password', name='password_confirm')
        .controls
          button.submit#settings-submit Save
          button.cancel Cancel
          
    //- Registration template
    script#signup-template(type='text/template')
      #signup-form.dialog
        .title
          h3 Signup
        .content
          p
            label(for='signup-username') Username: 
            .input-wrap
              input#signup-username(type='text', name='username')
          p
            label(for='signup-displayname') Display Name: (optional)
            .input-wrap
              input#signup-displayname(type='text', name='displayname')
          p
            label(for='signup-email') Email: 
            .input-wrap
              input#signup-email(type='text', name='email')
          p
            label(for='signup-password') Password: 
            .input-wrap
              input#signup-password(type='password', name='password')
        .controls
          button.submit#signup-submit Signup
          button.cancel Cancel
            
    //- Login template
    script#login-template(type='text/template')
      #login-form.dialog
        .title
          h3 Login
        .content
          p
            label(for='login-username') Username: 
            .input-wrap
              input#login-username(type='text', name='username')
          p
            label(for='login-password') Password: 
            .input-wrap
              input#login-password(type='password', name='password')
        .controls
          button.submit#login-submit Login
          button.cancel Cancel
    
    //- Create new room
    script#create-room-template(type='text/template')
      #create-room-form.dialog
        .title
          h3 Create a new room
        .content
          p
            label(for='create-room-name') Name: 
            .input-wrap
              input#create-room-name(type='text', name='room', placeholder='Room name')
          p
            label(for='create-room-description') Description:
            .input-wrap
              textarea#create-room-description(type='text', name='description', placeholder='Description')
          p
            label(for='create-room-restricted') Private room:
            .input-wrap
              input#create-room-restricted(type='checkbox', name='restricted')
        .controls
          button.submit#create-room-submit Create
          button.cancel Cancel
    
    //- Dependencies
    script(src='//ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.js')
    script(src='//ajax.googleapis.com/ajax/libs/jqueryui/1.8.10/jquery-ui.js')
    script(src='//cdn.wijmo.com/jquery.wijmo-open.1.1.5.min.js')
    script(src='//cdn.wijmo.com/external/raphael-min.js')
    script(src='//cdn.wijmo.com/external/jquery.mousewheel.min.js')
    script(src='/vendor/jquery-cookie/jquery.cookie.js')
    script(src='/vendor/keycandy/keyCandy.js')
    script(src='/vendor/happyjs/happy.js')
    script(src='/vendor/happyjs/happy.methods.js')
    script(src='/vendor/jquery-cssemoticons/javascripts/jquery.cssemoticons.js')
    script(src='/vendor/underscore/underscore-min.js')
    script(src='/vendor/backbone/backbone.js')
    script(src='/vendor/mustachejs/mustache.js')
    script(src='/vendor/json/json2.js')
    script(src='/dnode.js')
    
    //- Application core
    //script(src='/bootstrap.js')
    
    //- Helpers
    script(src='/google.js')
    script(src='/helpers.js')
    script(src='/icons.js')
    
    //- Remote procedure calls
    script(src='/rpc/auth.dnode.js')
    script(src='/rpc/pubsub.dnode.js')
    script(src='/rpc/crud.dnode.js')
    script(src='/rpc/gravatar.dnode.js')
    script(src='/rpc/misc.dnode.js')
    
    //- Models
    script(src='/models/message.model.js')
    script(src='/models/room.model.js')
    script(src='/models/user.model.js')
    script(src='/models/app.model.js')
    
    //- Views
    script(src='/views/user.view.js')
    script(src='/views/message.view.js')
    script(src='/views/room.view.js')
    script(src='/views/app.view.js')
    
    //- Routers
    script(src='/routers/app.router.js')
    
    //- Start application
    script(src='/init.js')
    
    //- Bootstrapped server settings
    script(type='text/javascript')
      port    = '!{locals.port}';
      token   = '!{locals.token}';
      version = '!{locals.version}';
